plugins {
    id 'java'
    id 'war'
}

group 'com.example'
version '1.0'

repositories {
    mavenCentral()
}

task installNode {
    description = "Ensure Node.js is available"
    doLast {
        def nodeCheck = execOutput('sh', '-c', 'command -v node >/dev/null 2>&1 && echo found || echo not-found').trim()
        if (nodeCheck == "not-found") {
            throw new GradleException("Node.js is required but not installed.")
        }
    }
}

task installDeps(type: Exec, dependsOn: installNode) {
    description = "Install npm dependencies"
    commandLine 'npm', 'install'
    workingDir = file('.')
}

task buildApp(type: Exec, dependsOn: installDeps) {
    description = "Build production version using Vite"
    commandLine 'npm', 'run', 'build'
    workingDir = file('.')
    inputs.files file('package.json'), file('vite.config.js'), fileTree('src')
    outputs.dir 'dist'
}

task copyDistToWebapp(type: Copy, dependsOn: buildApp) {
    description = "Copy dist/ to WAR webapp directory"
    from 'dist'
    into "$buildDir/resources/main/webapp"
}

war {
    archiveFileName = "expense.war"
    destinationDirectory = file("$buildDir/deploy")
    from "$buildDir/resources/main/webapp"
}

defaultTasks 'help'

task help {
    doLast {
        println """
        ðŸ’¡ Available Gradle Tasks:
        --------------------------
        ./gradlew war          -> Build WAR file
        ./gradlew buildApp    -> Build React/Vite frontend only
        ./gradlew copyDistToWebapp -> Copy dist/ to WAR resources
        """
    }
}

def execOutput(String... args) {
    def stdout = new ByteArrayOutputStream()
    exec {
        commandLine args
        standardOutput = stdout
    }
    return stdout.toString().trim()
}
